/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import controllers.ShipController;
import java.awt.Color;
import java.awt.Component;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import model.Ship;
import model.ShipOwner;
import other.ComboSearch;

/**
 *
 * @author Dell
 */
public class ManageShips extends javax.swing.JPanel {

    private DefaultTableModel model;
    private DefaultTableModel model1;

    /**
     * Creates new form ManageShips
     */
    public ManageShips() {
        initComponents();
        setModels();
        setCargoTypeCombo();
        shipOwnerTable.getSelectionModel().addListSelectionListener(new ListSelectionListener() {
            public void valueChanged(ListSelectionEvent e) {
                setShips();
                setShipOwnerId();
            }

        });

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        shipOwnerTable = new org.jdesktop.swingx.JXTable();
        jLabel4 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        shipTable = new org.jdesktop.swingx.JXTable();
        shipOwnerUpdateButton = new javax.swing.JLabel();
        shipOwnerDeleteButton = new javax.swing.JLabel();
        shipUpdateButton = new javax.swing.JLabel();
        shipDeleteButton = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        shipOwnerIdText = new javax.swing.JTextField();
        shipIdText = new javax.swing.JTextField();
        shipNameText = new javax.swing.JTextField();
        cargoTypeCombo = new javax.swing.JComboBox<>();
        emailText = new javax.swing.JTextField();
        teleText = new javax.swing.JTextField();
        addButton = new javax.swing.JPanel();
        jLabel14 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 255, 255));
        setMinimumSize(new java.awt.Dimension(1175, 675));
        setName("Add Ship\n"); // NOI18N
        setPreferredSize(new java.awt.Dimension(1175, 675));
        addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                formComponentShown(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(102, 102, 102));
        jPanel1.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 255, 255), 2, true));

        shipOwnerTable.setForeground(new java.awt.Color(107, 5, 4));
        shipOwnerTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Name", "Country", "Telephone", "Email"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, true, true, true, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        shipOwnerTable.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        shipOwnerTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                shipOwnerTableMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(shipOwnerTable);
        if (shipOwnerTable.getColumnModel().getColumnCount() > 0) {
            shipOwnerTable.getColumnModel().getColumn(0).setResizable(false);
            shipOwnerTable.getColumnModel().getColumn(1).setResizable(false);
            shipOwnerTable.getColumnModel().getColumn(2).setResizable(false);
            shipOwnerTable.getColumnModel().getColumn(3).setResizable(false);
            shipOwnerTable.getColumnModel().getColumn(4).setResizable(false);
        }

        jLabel4.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Ship Owners");

        jLabel1.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Ships");

        shipTable.setForeground(new java.awt.Color(107, 5, 4));
        shipTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Ship Id", "Name", "CargoType", "Telephone ", "Email"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, true, true, true, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        shipTable.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jScrollPane4.setViewportView(shipTable);

        shipOwnerUpdateButton.setBackground(new java.awt.Color(255, 153, 153));
        shipOwnerUpdateButton.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        shipOwnerUpdateButton.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        shipOwnerUpdateButton.setText("Update");
        shipOwnerUpdateButton.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 255)));
        shipOwnerUpdateButton.setOpaque(true);
        shipOwnerUpdateButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                shipOwnerUpdateButtonMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                shipOwnerUpdateButtonMouseExited(evt);
            }
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                shipOwnerUpdateButtonMouseClicked(evt);
            }
        });

        shipOwnerDeleteButton.setBackground(new java.awt.Color(255, 153, 153));
        shipOwnerDeleteButton.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        shipOwnerDeleteButton.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        shipOwnerDeleteButton.setText("Delete");
        shipOwnerDeleteButton.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 255)));
        shipOwnerDeleteButton.setOpaque(true);
        shipOwnerDeleteButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                shipOwnerDeleteButtonMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                shipOwnerDeleteButtonMouseExited(evt);
            }
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                shipOwnerDeleteButtonMouseClicked(evt);
            }
        });

        shipUpdateButton.setBackground(new java.awt.Color(255, 153, 153));
        shipUpdateButton.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        shipUpdateButton.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        shipUpdateButton.setText("Update");
        shipUpdateButton.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 255)));
        shipUpdateButton.setOpaque(true);
        shipUpdateButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                shipUpdateButtonMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                shipUpdateButtonMouseExited(evt);
            }
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                shipUpdateButtonMouseClicked(evt);
            }
        });

        shipDeleteButton.setBackground(new java.awt.Color(255, 153, 153));
        shipDeleteButton.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        shipDeleteButton.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        shipDeleteButton.setText("Delete");
        shipDeleteButton.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 255)));
        shipDeleteButton.setOpaque(true);
        shipDeleteButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                shipDeleteButtonMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                shipDeleteButtonMouseExited(evt);
            }
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                shipDeleteButtonMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                        .addGap(198, 198, 198)
                        .addComponent(jLabel4)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 549, Short.MAX_VALUE)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(shipUpdateButton, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(shipDeleteButton, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(3, 3, 3))
                            .addComponent(jScrollPane4)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(shipOwnerUpdateButton, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(shipOwnerDeleteButton, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(11, 11, 11)))
                .addContainerGap())
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(210, 210, 210)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 201, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(shipOwnerUpdateButton, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(shipOwnerDeleteButton, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 242, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(46, 46, 46))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(shipUpdateButton, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(shipDeleteButton, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );

        jPanel2.setBackground(new java.awt.Color(102, 102, 102));
        jPanel2.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 255, 255), 2, true));

        jLabel3.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Add Ship");

        jLabel2.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel2.setText("Ship Owner Id");

        jLabel9.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(255, 255, 255));
        jLabel9.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel9.setText("Ship Id");

        jLabel8.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel8.setText("Name");

        jLabel10.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(255, 255, 255));
        jLabel10.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel10.setText("Cargo Type");

        jLabel13.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(255, 255, 255));
        jLabel13.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel13.setText("Email");

        jLabel11.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(255, 255, 255));
        jLabel11.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel11.setText("Telephone");

        shipOwnerIdText.setEditable(false);
        shipOwnerIdText.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N

        shipIdText.setEditable(false);
        shipIdText.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N

        shipNameText.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        shipNameText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                shipNameTextActionPerformed(evt);
            }
        });

        emailText.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        emailText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                emailTextActionPerformed(evt);
            }
        });

        teleText.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N

        addButton.setBackground(new java.awt.Color(255, 153, 153));
        addButton.setPreferredSize(new java.awt.Dimension(100, 40));
        addButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                addButtonMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                addButtonMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                addButtonMouseExited(evt);
            }
        });
        addButton.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel14.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel14.setText("Add");
        addButton.add(jLabel14, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 10, 50, 18));

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(80, 80, 80)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jLabel13, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel10, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel8, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel9, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(22, 22, 22)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(shipNameText)
                                .addComponent(cargoTypeCombo, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(shipIdText)
                                    .addComponent(shipOwnerIdText, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(jPanel2Layout.createSequentialGroup()
                                    .addGap(2, 2, 2)
                                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(teleText, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(emailText, javax.swing.GroupLayout.PREFERRED_SIZE, 258, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(355, 355, 355)
                        .addComponent(addButton, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(25, 25, 25))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(39, 39, 39)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(22, 22, 22)
                        .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(17, 17, 17)
                        .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(20, 20, 20)
                        .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(22, 22, 22)
                        .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(shipOwnerIdText, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(shipIdText, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(shipNameText, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(15, 15, 15)
                        .addComponent(cargoTypeCombo, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(emailText, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(teleText, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addComponent(addButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 9, Short.MAX_VALUE)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(37, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void emailTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_emailTextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_emailTextActionPerformed

    private void shipNameTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_shipNameTextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_shipNameTextActionPerformed

    private void addButtonMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_addButtonMouseEntered
        addButton.setBackground(Color.red);
    }//GEN-LAST:event_addButtonMouseEntered

    private void addButtonMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_addButtonMouseExited
        addButton.setBackground(new Color(255, 153, 153));

    }//GEN-LAST:event_addButtonMouseExited

    private void addButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_addButtonMouseClicked
        addShip();
    }//GEN-LAST:event_addButtonMouseClicked

    private void formComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_formComponentShown
        addShipOwners();

        setShipId();

    }//GEN-LAST:event_formComponentShown

    private void shipOwnerTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_shipOwnerTableMouseClicked

    }//GEN-LAST:event_shipOwnerTableMouseClicked

    private void shipOwnerUpdateButtonMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_shipOwnerUpdateButtonMouseEntered
        enter(shipOwnerUpdateButton);
    }//GEN-LAST:event_shipOwnerUpdateButtonMouseEntered

    private void shipOwnerUpdateButtonMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_shipOwnerUpdateButtonMouseExited
        exit(shipOwnerUpdateButton);
    }//GEN-LAST:event_shipOwnerUpdateButtonMouseExited

    private void shipOwnerUpdateButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_shipOwnerUpdateButtonMouseClicked
        updateShipOwners();
    }//GEN-LAST:event_shipOwnerUpdateButtonMouseClicked

    private void shipOwnerDeleteButtonMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_shipOwnerDeleteButtonMouseEntered
        enter(shipOwnerDeleteButton);
    }//GEN-LAST:event_shipOwnerDeleteButtonMouseEntered

    private void shipOwnerDeleteButtonMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_shipOwnerDeleteButtonMouseExited
        exit(shipOwnerDeleteButton);
    }//GEN-LAST:event_shipOwnerDeleteButtonMouseExited

    private void shipOwnerDeleteButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_shipOwnerDeleteButtonMouseClicked
        deleteShipOwner();
    }//GEN-LAST:event_shipOwnerDeleteButtonMouseClicked

    private void shipUpdateButtonMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_shipUpdateButtonMouseEntered
        enter(shipUpdateButton);
    }//GEN-LAST:event_shipUpdateButtonMouseEntered

    private void shipUpdateButtonMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_shipUpdateButtonMouseExited
        exit(shipUpdateButton);
    }//GEN-LAST:event_shipUpdateButtonMouseExited

    private void shipUpdateButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_shipUpdateButtonMouseClicked
        updateShip();
    }//GEN-LAST:event_shipUpdateButtonMouseClicked

    private void shipDeleteButtonMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_shipDeleteButtonMouseEntered
        enter(shipDeleteButton);
    }//GEN-LAST:event_shipDeleteButtonMouseEntered

    private void shipDeleteButtonMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_shipDeleteButtonMouseExited
        exit(shipDeleteButton);
    }//GEN-LAST:event_shipDeleteButtonMouseExited

    private void shipDeleteButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_shipDeleteButtonMouseClicked
        deleteShip();
    }//GEN-LAST:event_shipDeleteButtonMouseClicked
    public void enter(Component c) {
        c.setBackground(Color.red);
        c.setForeground(Color.white);
    }

    public void exit(Component c) {
        c.setBackground(new Color(255, 153, 153));
        c.setForeground(Color.black);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel addButton;
    private javax.swing.JComboBox<String> cargoTypeCombo;
    private javax.swing.JTextField emailText;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JLabel shipDeleteButton;
    private javax.swing.JTextField shipIdText;
    private javax.swing.JTextField shipNameText;
    private javax.swing.JLabel shipOwnerDeleteButton;
    private javax.swing.JTextField shipOwnerIdText;
    private org.jdesktop.swingx.JXTable shipOwnerTable;
    private javax.swing.JLabel shipOwnerUpdateButton;
    private org.jdesktop.swingx.JXTable shipTable;
    private javax.swing.JLabel shipUpdateButton;
    private javax.swing.JTextField teleText;
    // End of variables declaration//GEN-END:variables

    private void addShipOwners() {
        try {
            model.setRowCount(0);
            ArrayList<ShipOwner> s1 = ShipController.getShipOwners();
            if (s1 == null) {
                return;
            }
            for (ShipOwner sh : s1) {
                model.addRow(new Object[]{sh.getShipOwnerId(), sh.getName(), sh.getCountry(), sh.getTelephone(), sh.getEmail()});
            }
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(ManageShips.this, ex.getMessage());
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(ManageShips.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void setShips() {
        try {
            if (shipOwnerTable.getSelectedRow() == -1) {
                return;
            }
            model1.setRowCount(0);
            String shId = model.getValueAt(shipOwnerTable.getSelectedRow(), 0).toString();

            ArrayList<Ship> s1 = ShipController.getShips(shId);
            for (Ship s : s1) {
                model1.addRow(new Object[]{s.getShipId(), s.getShipName(), s.getCargoType(), s.getTele(), s.getEmail()});
            }
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(ManageShips.this, ex.getMessage());
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(ManageShips.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void setModels() {
        model = (DefaultTableModel) shipOwnerTable.getModel();
        model1 = (DefaultTableModel) shipTable.getModel();
    }

    private void updateShipOwners() {
        if (model.getRowCount() == 0) {
            return;
        }

        ArrayList<ShipOwner> s1=new ArrayList<>();
        for (int i = 0; i < model.getRowCount(); i++) {
            s1.add(new ShipOwner(model.getValueAt(i,0 ).toString(), model.getValueAt(i,1 ).toString(), model.getValueAt(i,2 ).toString(), model.getValueAt(i,3 ).toString(), model.getValueAt(i,4 ).toString()));
        }
        try {
            boolean res = ShipController.updateShipOwner(s1);
            if (res) {
                JOptionPane.showMessageDialog(ManageShips.this, "Updated Succesfully");

            } else {
                JOptionPane.showMessageDialog(ManageShips.this, "Updated Failed");
            }
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(ManageShips.this, ex.getMessage());
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(ManageShips.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void deleteShipOwner() {
        try {
            if (shipOwnerTable.getSelectedRow()<0) {
                return ;
            }
            if (ShipController.deleteShipOwner(shipOwnerTable.getValueAt(shipOwnerTable.getSelectedRow(), 0).toString())) {
                JOptionPane.showMessageDialog(ManageShips.this, "Deleted Successfully..");
                model.removeRow(shipOwnerTable.getSelectedRow());
                setShipOwnerId();
                setShipId();
            } else {
                JOptionPane.showMessageDialog(ManageShips.this, "Deleted Failed..");
            }
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(ManageShips.this, ex.getMessage());
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(ManageShips.class.getName()).log(Level.SEVERE, null, ex);
        }
        model1.setRowCount(0);
        shipOwnerIdText.setText("");
    }

    private void updateShip() {
        if (model1.getRowCount() == 0) {
            return;
        }

        ArrayList<Ship> s1=new ArrayList<>();
        for (int i = 0; i < model1.getRowCount(); i++) {
            s1.add(new Ship(model1.getValueAt(i, 0).toString(), "", model1.getValueAt(i, 1).toString(), model1.getValueAt(i, 2).toString(), model1.getValueAt(i, 3).toString(), model1.getValueAt(i, 4).toString()));
        }
        
        try {
            boolean res = ShipController.updateShip(s1);
            if (res) {
                JOptionPane.showMessageDialog(ManageShips.this, "Updated Succesfully");

            } else {
                JOptionPane.showMessageDialog(ManageShips.this, "Updated Failed");
            }
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(ManageShips.this, ex.getMessage());
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(ManageShips.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void deleteShip() {
        try {
            if (shipTable.getSelectedRow()<0) {
                return ;
            }
            if (ShipController.deleteShip(shipTable.getValueAt(shipTable.getSelectedRow(), 0).toString())) {
                JOptionPane.showMessageDialog(ManageShips.this, "Deleted Successfully..");
                model1.removeRow(shipTable.getSelectedRow());
                setShipId();
            } else {
                JOptionPane.showMessageDialog(ManageShips.this, "Deleted Failed..");
            }
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(ManageShips.this, ex.getMessage());
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(ManageShips.class.getName()).log(Level.SEVERE, null, ex);
        }

    }

    private void setShipOwnerId() {
        if (shipOwnerTable.getSelectedRow() == -1) {
            return;
        }
        shipOwnerIdText.setText(shipOwnerTable.getValueAt(shipOwnerTable.getSelectedRow(), 0).toString());
    }

    private void setShipId() {
        try {
            shipIdText.setText(ShipController.getNextShipId());
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(ManageShips.this, ex.getMessage());
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(ManageShips.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void setCargoTypeCombo() {
        cargoTypeCombo.addItem("Gas");
        cargoTypeCombo.addItem("Oil");
        cargoTypeCombo.addItem("Food");
        cargoTypeCombo.addItem("Vehicle");
        new ComboSearch().setSearchableCombo(cargoTypeCombo, true, "No result found...");
    }

    private void addShip() {
        String shipId = shipIdText.getText();
        String shId = shipOwnerIdText.getText();
        String name = shipNameText.getText();
        String cargo = cargoTypeCombo.getSelectedItem().toString();
        String email = emailText.getText();
        String tele = teleText.getText();
        boolean b1 = name.equals("");
        boolean b2 = email.equals("");
        boolean b3 = tele.equals("");
        if (b1 | b2 | b3) {
            JOptionPane.showMessageDialog(ManageShips.this, "Fill all Records...");
            return;
        }
        ArrayList<Ship> s1 = new ArrayList<>();
        s1.add(new Ship(shipId, shId, name, cargo, tele, email));
        try {
            if (ShipController.addShip(s1)) {
                setShips();
                setShipId();
                clearText();
            } else {
                JOptionPane.showMessageDialog(ManageShips.this, "Added Failed...");
            }
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(ManageShips.this, ex.getMessage());
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(ManageShips.class.getName()).log(Level.SEVERE, null, ex);
        }

    }

    private void clearText() {
        shipNameText.setText("");
        emailText.setText("");
        teleText.setText("");
    }
}
