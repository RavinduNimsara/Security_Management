/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view.sub;

import controllers.PaymentController;
import controllers.ShipController;
import java.awt.Color;
import java.io.InputStream;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.table.DefaultTableModel;
import model.Payment;
import model.Ship;
import net.sf.jasperreports.engine.JRException;
import net.sf.jasperreports.engine.JasperCompileManager;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.engine.data.JRTableModelDataSource;
import net.sf.jasperreports.view.JasperViewer;
import other.ComboSearch;

/**
 *
 * @author Dell
 */
public class PaymentsbyShip extends javax.swing.JPanel {

    private final DefaultTableModel model;
    private final DefaultTableModel model1;

    /**
     * Creates new form PaymentsbyShip
     */
    public PaymentsbyShip() {
        initComponents();
        model = (DefaultTableModel) shipOwnerPaymentTable.getModel();
        model1 = (DefaultTableModel) shipPaymentTable.getModel();
        setShIds();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        shIdCombo = new javax.swing.JComboBox<>();
        shipIdCombo = new javax.swing.JComboBox<>();
        jScrollPane2 = new javax.swing.JScrollPane();
        shipOwnerPaymentTable = new org.jdesktop.swingx.JXTable();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        shipPaymentTable = new org.jdesktop.swingx.JXTable();
        jLabel3 = new javax.swing.JLabel();
        refreshLabel = new javax.swing.JLabel();
        printButton = new javax.swing.JButton();
        shipName = new javax.swing.JTextField();
        shipOwnerName = new javax.swing.JTextField();

        setBackground(new java.awt.Color(255, 255, 255));
        setMinimumSize(new java.awt.Dimension(571, 528));
        setName("Sort by Ship"); // NOI18N
        setPreferredSize(new java.awt.Dimension(571, 528));
        setRequestFocusEnabled(false);
        addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseExited(java.awt.event.MouseEvent evt) {
                formMouseExited(evt);
            }
        });
        addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                formComponentShown(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(102, 102, 102));

        shIdCombo.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                shIdComboItemStateChanged(evt);
            }
        });
        shIdCombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                shIdComboActionPerformed(evt);
            }
        });

        shipIdCombo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { " " }));
        shipIdCombo.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                shipIdComboItemStateChanged(evt);
            }
        });
        shipIdCombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                shipIdComboActionPerformed(evt);
            }
        });

        shipOwnerPaymentTable.setForeground(new java.awt.Color(107, 5, 4));
        shipOwnerPaymentTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "PID", "RID", "Date", "AmountUS", "AmountRs", "Rate"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        shipOwnerPaymentTable.setEditable(false);
        shipOwnerPaymentTable.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jScrollPane2.setViewportView(shipOwnerPaymentTable);

        jLabel1.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Select Ship ");

        jLabel2.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Select Ship Owner");

        shipPaymentTable.setForeground(new java.awt.Color(107, 5, 4));
        shipPaymentTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "PID", "RID", "Date", "Amount US$", "Amount Rs", "Rate"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        shipPaymentTable.setEditable(false);
        shipPaymentTable.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jScrollPane3.setViewportView(shipPaymentTable);

        jLabel3.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 0, 0));
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("Refresh");

        refreshLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        refreshLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/images/images/ref2.png"))); // NOI18N
        refreshLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                refreshLabelMouseClicked(evt);
            }
        });

        printButton.setText("Print");
        printButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                printButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(17, 17, 17)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(shIdCombo, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(shipOwnerName, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(99, 99, 99)
                        .addComponent(jLabel3)
                        .addGap(10, 10, 10)
                        .addComponent(refreshLabel))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(9, 9, 9)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 532, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(486, 486, 486)
                        .addComponent(printButton))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(35, 35, 35)
                        .addComponent(jLabel1)
                        .addGap(28, 28, 28)
                        .addComponent(shipIdCombo, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(shipName, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 531, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(10, 10, 10))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(11, 11, 11)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(shIdCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(shipOwnerName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(refreshLabel))
                .addGap(20, 20, 20)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(8, 8, 8)
                .addComponent(printButton)
                .addGap(8, 8, 8)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(shipIdCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(shipName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void shipIdComboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_shipIdComboActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_shipIdComboActionPerformed

    private void shIdComboItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_shIdComboItemStateChanged
        setShipIds();
        setShipPaymentTable();
    }//GEN-LAST:event_shIdComboItemStateChanged

    private void shipIdComboItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_shipIdComboItemStateChanged
        setShipPayments();
    }//GEN-LAST:event_shipIdComboItemStateChanged

    private void refreshLabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_refreshLabelMouseClicked
        jLabel3.setForeground(Color.green);
        setShipPaymentTable();
        setShipPayments();
        refreshLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/images/images/011_yes-128.png")));
        
    }//GEN-LAST:event_refreshLabelMouseClicked

    private void formMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseExited
        jLabel3.setForeground(Color.red);
        refreshLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/images/images/ref2.png")));
    }//GEN-LAST:event_formMouseExited

    private void formComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_formComponentShown
        setShIds();
    }//GEN-LAST:event_formComponentShown

    private void printButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_printButtonActionPerformed
        InputStream iS = getClass().getResourceAsStream("/Reports/PaymentReport1.jrxml");
        HashMap<String,Object> h=new HashMap<>();
        h.put("Name",shipOwnerName.getText());
        try {
            
            JasperReport compileReport = JasperCompileManager.compileReport(iS);
            JasperPrint fillReport = JasperFillManager.fillReport(compileReport, h,new JRTableModelDataSource(model));
            JasperViewer.viewReport(fillReport,false);
            
        } catch (JRException ex) {
            Logger.getLogger(PaymentsbyShip.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }//GEN-LAST:event_printButtonActionPerformed

    private void shIdComboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_shIdComboActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_shIdComboActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JButton printButton;
    private javax.swing.JLabel refreshLabel;
    private javax.swing.JComboBox<String> shIdCombo;
    private javax.swing.JComboBox<String> shipIdCombo;
    private javax.swing.JTextField shipName;
    private javax.swing.JTextField shipOwnerName;
    private org.jdesktop.swingx.JXTable shipOwnerPaymentTable;
    private org.jdesktop.swingx.JXTable shipPaymentTable;
    // End of variables declaration//GEN-END:variables

    private void setShIds() {
        shIdCombo.removeAllItems();
        try {
            ArrayList<String> s1 = ShipController.getShIds();
            for (String s : s1) {
                shIdCombo.addItem(s);
            }
        } catch (SQLException ex) {
            Logger.getLogger(PaymentsbyShip.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(PaymentsbyShip.class.getName()).log(Level.SEVERE, null, ex);
        }
        new ComboSearch().setSearchableCombo(shIdCombo, true, "No result found...");
    }

    private void setShipIds() {
        shipIdCombo.removeAllItems();
        try {
            if (shIdCombo.getSelectedItem() == null) {
                return;
            }
            shipOwnerName.setText(ShipController.searchShipOwner(shIdCombo.getSelectedItem().toString()));
            ArrayList<Ship> s = ShipController.getShips(shIdCombo.getSelectedItem().toString());
            for (Ship s1 : s) {
                shipIdCombo.addItem(s1.getShipId());
            }
            new ComboSearch().setSearchableCombo(shipIdCombo, true, "No result found...");
        } catch (SQLException ex) {
            Logger.getLogger(PaymentsbyShip.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(PaymentsbyShip.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void setShipPaymentTable() {
        model.setRowCount(0);
        if (shIdCombo.getSelectedItem()==null) {
            return ;
        }
        try {
            ArrayList<Payment> p1 = PaymentController.getPaymentsOfShId(shIdCombo.getSelectedItem().toString());
            for (Payment p : p1) {
                model.addRow(new Object[]{p.getPid(), p.getRid(), p.getDate(), p.getAmountUS$(), p.getAmountRs(), p.getRate()});
            }
        } catch (SQLException ex) {
            Logger.getLogger(PaymentsbyShip.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(PaymentsbyShip.class.getName()).log(Level.SEVERE, null, ex);
        }

    }

    private void setShipPayments() {
        model1.setRowCount(0);
        if (shipIdCombo.getSelectedItem()==null) {
            return ;
        }
        
        try {
            shipName.setText(ShipController.searchShip(shipIdCombo.getSelectedItem().toString()));
            ArrayList<Payment> p1 = PaymentController.getPaymentsOfShipId(shipIdCombo.getSelectedItem().toString());
            for (Payment p : p1) {
                model1.addRow(new Object[]{p.getPid(), p.getRid(), p.getDate(), p.getAmountUS$(), p.getAmountRs(), p.getRate()});
            }
        } catch (SQLException ex) {
            Logger.getLogger(PaymentsbyShip.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(PaymentsbyShip.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
}
