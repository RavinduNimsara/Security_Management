/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view.sub1;

import controllers.SalaryController;
import java.awt.Color;
import java.io.InputStream;
import java.sql.SQLException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.table.DefaultTableModel;
import model.Salary;
import net.sf.jasperreports.engine.JRException;
import net.sf.jasperreports.engine.JasperCompileManager;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.engine.data.JRTableModelDataSource;
import net.sf.jasperreports.view.JasperViewer;
import other.ComboSearch;
import view.sub.DatePayments;

/**
 *
 * @author Dell
 */
public class SalariesOfDate extends javax.swing.JPanel {

    private final DefaultTableModel model;
    private final DefaultTableModel model2;
    private int a;

    /**
     * Creates new form SalariesOfDate
     */
    public SalariesOfDate() {
        initComponents();
        a = 0;
        setCombo();
        a = 1;
        model2 = (DefaultTableModel) tab2.getModel();
        model = (DefaultTableModel) table.getModel();
        setTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        datePicker = new org.jdesktop.swingx.JXDatePicker();
        rText = new javax.swing.JLabel();
        refreshLabel = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        table = new javax.swing.JTable();
        jLabel3 = new javax.swing.JLabel();
        yearCombo = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        monthCombo = new javax.swing.JComboBox<>();
        jScrollPane2 = new javax.swing.JScrollPane();
        tab2 = new javax.swing.JTable();
        rsTotal = new javax.swing.JLabel();
        printButton = new javax.swing.JButton();

        setBackground(new java.awt.Color(255, 255, 255));
        setMaximumSize(new java.awt.Dimension(550, 530));
        setMinimumSize(new java.awt.Dimension(550, 530));
        setName("Sort by Date"); // NOI18N
        setPreferredSize(new java.awt.Dimension(550, 530));
        addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseExited(java.awt.event.MouseEvent evt) {
                formMouseExited(evt);
            }
        });
        addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                formComponentShown(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(102, 102, 102));

        jLabel1.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Select Date");

        datePicker.setDate(new Date());
        datePicker.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                datePickerActionPerformed(evt);
            }
        });

        rText.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        rText.setForeground(new java.awt.Color(255, 0, 0));
        rText.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        rText.setText("Refresh");

        refreshLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        refreshLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/images/images/ref2.png"))); // NOI18N
        refreshLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                refreshLabelMouseClicked(evt);
            }
        });

        table.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        table.setForeground(new java.awt.Color(107, 5, 4));
        table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "SlId", "RID", "Date", "Amount Rs"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(table);

        jLabel3.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Select Year");

        yearCombo.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                yearComboItemStateChanged(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Select Month");

        monthCombo.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                monthComboItemStateChanged(evt);
            }
        });

        tab2.setFont(new java.awt.Font("Arial", 1, 11)); // NOI18N
        tab2.setForeground(new java.awt.Color(107, 5, 4));
        tab2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "SlId", "RID", "Date", "Amount"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(tab2);

        rsTotal.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        rsTotal.setForeground(new java.awt.Color(204, 0, 0));
        rsTotal.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        rsTotal.setText("0.0");

        printButton.setText("Print");
        printButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                printButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(38, 38, 38)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(40, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addComponent(jLabel3)
                        .addGap(18, 18, 18)
                        .addComponent(yearCombo, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(77, 77, 77)
                        .addComponent(jLabel2)
                        .addGap(18, 18, 18)
                        .addComponent(monthCombo, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.TRAILING))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(31, 31, 31)
                        .addComponent(datePicker, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(58, 58, 58)
                        .addComponent(rText)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(refreshLabel)
                        .addGap(20, 20, 20))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(printButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(rsTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(30, 30, 30))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(refreshLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(8, 8, 8)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(rText, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(datePicker, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(yearCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(monthCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(rsTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(printButton))
                .addContainerGap(18, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void datePickerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_datePickerActionPerformed
        setTable();
    }//GEN-LAST:event_datePickerActionPerformed

    private void refreshLabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_refreshLabelMouseClicked
        setTable();
        rText.setForeground(Color.green);
        refreshLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/images/images/011_yes-128.png")));
        setTable2();
    }//GEN-LAST:event_refreshLabelMouseClicked

    private void formMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseExited
        rText.setForeground(Color.red);
        refreshLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/images/images/ref2.png")));
    }//GEN-LAST:event_formMouseExited

    private void formComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_formComponentShown
        setTable();
    }//GEN-LAST:event_formComponentShown

    private void yearComboItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_yearComboItemStateChanged
        if (a == 0) {
            return;
        }
        setTable2();
    }//GEN-LAST:event_yearComboItemStateChanged

    private void monthComboItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_monthComboItemStateChanged
        if (a == 0) {
            return;
        }
        setTable2();
    }//GEN-LAST:event_monthComboItemStateChanged

    private void printButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_printButtonActionPerformed
        String year = yearCombo.getSelectedItem().toString();
        String month = "December";
        String monthNum = monthCombo.getSelectedItem().toString();
        if (monthNum.equals("1")) {
            month = "January";
        }
        if (monthNum.equals("2")) {
            month = "February";
        }
        if (monthNum.equals("3")) {
            month = "March";
        }
        if (monthNum.equals("4")) {
            month = "April";
        }
        if (monthNum.equals("5")) {
            month = "May";
        }
        if (monthNum.equals("6")) {
            month = "June";
        }
        if (monthNum.equals("7")) {
            month = "July";
        }
        if (monthNum.equals("8")) {
            month = "August";
        }
        if (monthNum.equals("9")) {
            month = "September";
        }
        if (monthNum.equals("10")) {
            month = "October";
        }
        if (monthNum.equals("11")) {
            month = "November";
        }
        InputStream iS = getClass().getResourceAsStream("/Reports/DateSalary.jrxml");
        HashMap<String, Object> h = new HashMap<>();
        h.put("Year", year);
        h.put("Month", month);
        h.put("Rs", rsTotal.getText());
        try {
            JasperReport compileReport = JasperCompileManager.compileReport(iS);
            JasperPrint fillReport = JasperFillManager.fillReport(compileReport, h, new JRTableModelDataSource(model2));
            JasperViewer.viewReport(fillReport,false);
        } catch (JRException ex) {
            Logger.getLogger(DatePayments.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_printButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private org.jdesktop.swingx.JXDatePicker datePicker;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JComboBox<String> monthCombo;
    private javax.swing.JButton printButton;
    private javax.swing.JLabel rText;
    private javax.swing.JLabel refreshLabel;
    private javax.swing.JLabel rsTotal;
    private javax.swing.JTable tab2;
    private javax.swing.JTable table;
    private javax.swing.JComboBox<String> yearCombo;
    // End of variables declaration//GEN-END:variables

    private void setTable() {
        SimpleDateFormat format = new SimpleDateFormat("yyyy-MM-dd");
        String date = format.format(datePicker.getDate());
        model.setRowCount(0);
        try {
            ArrayList<Salary> p1 = SalaryController.getSalariesofDate(date);
            if (p1.isEmpty()) {
                return;
            }
            for (Salary p : p1) {
                model.addRow(new Object[]{p.getSid(), p.getRid(), p.getDate(), p.getAmount()});
            }
        } catch (SQLException ex) {
            Logger.getLogger(SalariesOfDate.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(SalariesOfDate.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void setCombo() {
        monthCombo.addItem("1");
        monthCombo.addItem("2");
        monthCombo.addItem("3");
        monthCombo.addItem("4");
        monthCombo.addItem("5");
        monthCombo.addItem("6");
        monthCombo.addItem("7");
        monthCombo.addItem("8");
        monthCombo.addItem("9");
        monthCombo.addItem("10");
        monthCombo.addItem("11");
        monthCombo.addItem("12");
        new ComboSearch().setSearchableCombo(monthCombo, true, "No result found...");

        SimpleDateFormat s1 = new SimpleDateFormat("yyyy");
        int curYear = Integer.parseInt(s1.format(new Date()));
        int m = 2016;
        for (int i = m; i <= curYear; i++) {
            yearCombo.addItem(i + "");
        }
        new ComboSearch().setSearchableCombo(yearCombo, true, "No result found...");
    }

    private void setTable2() {
        model2.setRowCount(0);
        String year = yearCombo.getSelectedItem().toString();
        String month = monthCombo.getSelectedItem().toString();
        try {
            ArrayList<Salary> p1 = SalaryController.getSalariessOfMonth(year, month);
            if (p1.isEmpty()) {
                rsTotal.setText("0.0");
                return;
            }
            for (Salary p : p1) {
                model2.addRow(new Object[]{p.getSid(), p.getRid(), p.getDate(), p.getAmount()});
            }
        } catch (SQLException ex) {
            Logger.getLogger(SalariesOfDate.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(SalariesOfDate.class.getName()).log(Level.SEVERE, null, ex);
        }
        setTotal();
    }

    private void setTotal() {

        double rs = 0;
        for (int i = 0; i < tab2.getRowCount(); i++) {

            rs += Double.parseDouble(model2.getValueAt(i, 3).toString());
        }

        rsTotal.setText(rs + "");
    }
}
